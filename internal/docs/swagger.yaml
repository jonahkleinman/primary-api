basePath: /internal/v1
definitions:
  action_log.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      entry:
        example: Changed Preferred OIs to RP
        type: string
    required:
    - cid
    - entry
    type: object
  action_log.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1234567'' or ''System'''
        type: string
      entry:
        example: Changed Preferred OIs to RP
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: '''1234567'' or ''System'''
        type: string
    type: object
  disciplinary_log.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      entry:
        example: Changed Preferred OIs to RP
        type: string
      vatusa_only:
        example: true
        type: boolean
    required:
    - cid
    - entry
    type: object
  disciplinary_log.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1234567'' or ''System'''
        type: string
      entry:
        example: Changed Preferred OIs to RP
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: '''1234567'' or ''System'''
        type: string
      vatusa_only:
        example: true
        type: boolean
    type: object
  document.Request:
    properties:
      category:
        enum:
        - general
        - training
        - information_technology
        - sops
        - loas
        - misc
        example: general
        type: string
      description:
        example: General Division Policy
        type: string
      facility:
        example: ZDV
        type: string
      name:
        example: DP001
        type: string
    required:
    - category
    - description
    - facility
    - name
    type: object
  document.Response:
    properties:
      category:
        allOf:
        - $ref: '#/definitions/types.DocumentCategory'
        example: general
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: 1293257
        type: integer
      description:
        example: General Division Policy
        type: string
      facility:
        example: ZDV
        type: string
      id:
        example: 1
        type: integer
      name:
        example: DP001
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: 1293257
        type: integer
      url:
        example: https://zdvartcc.org
        type: string
    type: object
  facility_log.Request:
    properties:
      entry:
        example: Changed Preferred OIs to RP
        type: string
      facility:
        example: ZDV
        type: string
    required:
    - entry
    - facility
    type: object
  facility_log.Response:
    properties:
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1234567'' or ''System'''
        type: string
      entry:
        example: Change URL from 'denartcc.org' to 'zdvartcc.org'
        type: string
      facility:
        example: ZDV
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: '''1234567'' or ''System'''
        type: string
    type: object
  faq.Request:
    properties:
      answer:
        type: string
      category:
        enum:
        - membership
        - training
        - technology
        - misc
        type: string
      facility:
        type: string
      question:
        type: string
    required:
    - answer
    - category
    - facility
    - question
    type: object
  faq.Response:
    properties:
      answer:
        example: There are no reasons not to join ZDV!
        type: string
      category:
        example: membership
        type: string
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: 1293257
        type: integer
      facility:
        example: ZDV
        type: string
      id:
        example: 1
        type: integer
      question:
        example: Why shouldn't I join ZDV?'
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: 1293257
        type: integer
    type: object
  feedback.Request:
    properties:
      callsign:
        example: DAL123
        type: string
      comment:
        example: Great work Raaj!
        type: string
      controller_cid:
        example: 1293257
        type: integer
      facility:
        example: ZDV
        type: string
      notes:
        example: Raaj was the best controller I've ever flown under.
        type: string
      pilot_cid:
        example: 1293257
        type: integer
      position:
        example: DEN_I_APP
        type: string
      rating:
        allOf:
        - $ref: '#/definitions/types.FeedbackRating'
        enum:
        - unsatisfactory
        - poor
        - fair
        - good
        - excellent
        example: good
      status:
        allOf:
        - $ref: '#/definitions/types.StatusType'
        enum:
        - pending
        - approved
        - denied
        example: pending
    required:
    - callsign
    - controller_cid
    - facility
    - notes
    - pilot_cid
    - position
    - rating
    - status
    type: object
  feedback.Response:
    properties:
      callsign:
        example: DAL123
        type: string
      comment:
        example: Great work Raaj!
        type: string
      controller:
        $ref: '#/definitions/models.User'
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      facility:
        example: ZDV
        type: string
      id:
        example: 1
        type: integer
      notes:
        example: Raaj was the best controller I've ever flown under.
        type: string
      pilot:
        $ref: '#/definitions/models.User'
      position:
        example: DEN_I_APP
        type: string
      rating:
        allOf:
        - $ref: '#/definitions/types.FeedbackRating'
        example: "1"
      status:
        allOf:
        - $ref: '#/definitions/types.StatusType'
        example: pending
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  models.Role:
    properties:
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      name:
        example: Air Traffic Manager
        type: string
      role:
        example: ATM
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  models.User:
    properties:
      cid:
        example: 1293257
        type: integer
      controller_rating:
        example: 1
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      discord_id:
        example: "1234567890"
        type: string
      email:
        example: vatusa6@vatusa.net
        type: string
      first_name:
        example: Raaj
        type: string
      flags:
        items:
          $ref: '#/definitions/models.UserFlag'
        type: array
      last_cert_sync:
        example: "2021-01-01T00:00:00Z"
        type: string
      last_login:
        example: "2021-01-01T00:00:00Z"
        type: string
      last_name:
        example: Patel
        type: string
      pilot_rating:
        example: 1
        type: integer
      pref_name_enabled:
        example: true
        type: boolean
      preferred_name:
        example: Raaj
        type: string
      preferred_ois:
        example: RP
        type: string
      roles:
        items:
          $ref: '#/definitions/models.UserRole'
        type: array
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  models.UserFlag:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      no_staff_log_entry_id:
        example: 1
        type: integer
      no_staff_role:
        example: false
        type: boolean
      no_training:
        example: false
        type: boolean
      no_training_log_entry_id:
        example: 1
        type: integer
      no_transferring:
        example: false
        type: boolean
      no_transferring_log_entry_id:
        example: 1
        type: integer
      no_visiting:
        example: false
        type: boolean
      no_visiting_log_entry_id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  models.UserRole:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      facility_id:
        example: ZDV
        type: string
      id:
        example: 1
        type: integer
      role:
        $ref: '#/definitions/models.Role'
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  news.Request:
    properties:
      description:
        example: DP001 has been revised to include new information regarding the new
          VATSIM Code of Conduct
        type: string
      facility:
        example: ZDV
        type: string
      title:
        example: DP001 Revision 3 Released
        type: string
    required:
    - description
    - facility
    - title
    type: object
  news.Response:
    properties:
      answer:
        example: DP001 has been revised to include new information regarding the new
          VATSIM Code of Conduct
        type: string
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1293257'' or ''System'''
        type: string
      facility:
        example: ZDV
        type: string
      id:
        example: 1
        type: integer
      news:
        example: DP001 Revision 3 Released
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: "1293257"
        type: string
    type: object
  notification.Request:
    properties:
      body:
        example: You have a training session coming up.
        type: string
      category:
        example: Training
        type: string
      cid:
        example: 1293257
        type: integer
      expire_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      title:
        example: Upcoming Training Session
        type: string
    required:
    - body
    - category
    - cid
    - expire_at
    - title
    type: object
  notification.Response:
    properties:
      body:
        example: You have a training session coming up.
        type: string
      category:
        example: Training
        type: string
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      expire_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      title:
        example: Upcoming Training Session
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  rating_change.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      created_by_cid:
        example: "1293257"
        type: string
      new_rating:
        example: 2
        type: integer
      old_rating:
        example: 1
        type: integer
    required:
    - cid
    - created_by_cid
    - new_rating
    - old_rating
    type: object
  rating_change.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by_cid:
        example: "1293257"
        type: string
      id:
        example: 1
        type: integer
      new_rating:
        example: 2
        type: integer
      old_rating:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  roster.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      facility:
        example: ZDV
        type: string
      home:
        example: true
        type: boolean
      instructor:
        example: false
        type: boolean
      mentor:
        example: false
        type: boolean
      operating_initials:
        example: RP
        type: string
      status:
        description: Active, LOA
        enum:
        - active
        - loa
        example: Active
        type: string
      visiting:
        example: false
        type: boolean
    required:
    - cid
    - facility
    - operating_initials
    - status
    type: object
  roster.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      deleted_at:
        description: Soft Deletes for logging
        example: "2021-01-01T00:00:00Z"
        type: string
      facility:
        example: ZDV
        type: string
      home:
        example: true
        type: boolean
      id:
        example: 1
        type: integer
      instructor:
        example: false
        type: boolean
      mentor:
        example: false
        type: boolean
      operating_initials:
        example: RP
        type: string
      status:
        description: Active, LOA
        example: Active
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      visiting:
        example: false
        type: boolean
    type: object
  roster_request.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      reason:
        example: I want to transfer to ZDV
        type: string
      request_type:
        allOf:
        - $ref: '#/definitions/types.RequestType'
        enum:
        - visiting
        - transferring
        example: visiting
      requested_facility:
        example: ZDV
        type: string
      status:
        allOf:
        - $ref: '#/definitions/types.StatusType'
        enum:
        - pending
        - accepted
        - rejected
        example: pending
    required:
    - cid
    - reason
    - request_type
    - requested_facility
    - status
    type: object
  roster_request.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      reason:
        example: I want to transfer to ZDV
        type: string
      requestType:
        $ref: '#/definitions/types.RequestType'
      requested_facility:
        example: ZDV
        type: string
      status:
        $ref: '#/definitions/types.StatusType'
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  types.DocumentCategory:
    enum:
    - general
    - training
    - information_technology
    - sops
    - loas
    - misc
    type: string
    x-enum-varnames:
    - General
    - Training
    - InformationTechnology
    - SOPs
    - LOAs
    - Misc
  types.FeedbackRating:
    enum:
    - unsatisfactory
    - poor
    - fair
    - good
    - excellent
    type: string
    x-enum-varnames:
    - Unsatisfactory
    - Poor
    - Fair
    - Good
    - Excellent
  types.RequestType:
    enum:
    - visiting
    - transferring
    type: string
    x-enum-varnames:
    - Visiting
    - Transferring
  types.StatusType:
    enum:
    - pending
    - accepted
    - rejected
    type: string
    x-enum-varnames:
    - Pending
    - Accepted
    - Rejected
  user.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      controller_rating:
        example: 1
        type: integer
      discord_id:
        example: "1234567890"
        type: string
      email:
        example: vatusa6@vatusa.net
        type: string
      first_name:
        example: Raaj
        type: string
      last_cert_sync:
        example: "2021-01-01T00:00:00Z"
        type: string
      last_name:
        example: Patel
        type: string
      pilot_rating:
        example: 1
        type: integer
      preferred_name:
        example: Raaj
        type: string
      preferred_ois:
        example: RP
        type: string
    required:
    - cid
    - controller_rating
    - email
    - first_name
    - last_name
    - pilot_rating
    type: object
  user.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      controller_rating:
        example: 1
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      discord_id:
        example: "1234567890"
        type: string
      email:
        example: vatusa6@vatusa.net
        type: string
      first_name:
        example: Raaj
        type: string
      flags:
        items:
          $ref: '#/definitions/models.UserFlag'
        type: array
      last_cert_sync:
        example: "2021-01-01T00:00:00Z"
        type: string
      last_login:
        example: "2021-01-01T00:00:00Z"
        type: string
      last_name:
        example: Patel
        type: string
      pilot_rating:
        example: 1
        type: integer
      pref_name_enabled:
        example: true
        type: boolean
      preferred_name:
        example: Raaj
        type: string
      preferred_ois:
        example: RP
        type: string
      roles:
        items:
          $ref: '#/definitions/models.UserRole'
        type: array
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  user_flag.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      no_staff_log_entry_id:
        example: 1
        type: integer
      no_staff_role:
        example: false
        type: boolean
      no_training:
        example: false
        type: boolean
      no_training_log_entry_id:
        example: 1
        type: integer
      no_transferring:
        example: false
        type: boolean
      no_transferring_log_entry_id:
        type: integer
      no_visiting:
        example: false
        type: boolean
      no_visiting_log_entry_id:
        example: 1
        type: integer
    required:
    - cid
    type: object
  user_flag.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      no_staff_log_entry_id:
        example: 1
        type: integer
      no_staff_role:
        example: false
        type: boolean
      no_training:
        example: false
        type: boolean
      no_training_log_entry_id:
        example: 1
        type: integer
      no_transferring:
        example: false
        type: boolean
      no_transferring_log_entry_id:
        example: 1
        type: integer
      no_visiting:
        example: false
        type: boolean
      no_visiting_log_entry_id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  user_role.Request:
    properties:
      cid:
        example: 1293257
        type: integer
      facility_id:
        example: ZDV
        type: string
      role_id:
        example: ATM
        type: string
    required:
    - cid
    - facility_id
    - role_id
    type: object
  user_role.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      facility_id:
        example: ZDV
        type: string
      id:
        example: 1
        type: integer
      role:
        $ref: '#/definitions/models.Role'
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  utils.ErrResponse:
    properties:
      code:
        description: application-specific error code
        type: integer
      error:
        description: application-level error message, for debugging
        type: string
      status:
        description: user-level status message
        type: string
    type: object
host: api.vatusa.local
info:
  contact:
    email: vatusa6@vatusa.net
    name: VATUSA Support
    url: http://www.swagger.io/support
  description: VATUSAs internal API for use by other internal VATUSA services.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: VATUSA Internal
  version: "0.1"
paths:
  /action-log:
    get:
      consumes:
      - application/json
      description: List all action log entries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/action_log.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all action log entries
      tags:
      - action-log
    post:
      consumes:
      - application/json
      description: Create a new action log entry
      parameters:
      - description: Action Log Entry
        in: body
        name: action_log
        required: true
        schema:
          $ref: '#/definitions/action_log.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/action_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new action log entry
      tags:
      - action-log
  /action-log/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an action log entry
      parameters:
      - description: Action Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete an action log entry
      tags:
      - action-log
    get:
      consumes:
      - application/json
      description: Get an action log entry
      parameters:
      - description: Action Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/action_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get an action log entry
      tags:
      - action-log
    patch:
      consumes:
      - application/json
      description: Patch an action log entry
      parameters:
      - description: Action Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      - description: Action Log Entry
        in: body
        name: action_log
        required: true
        schema:
          $ref: '#/definitions/action_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/action_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch an action log entry
      tags:
      - action-log
    put:
      consumes:
      - application/json
      description: Update an action log entry
      parameters:
      - description: Action Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      - description: Action Log Entry
        in: body
        name: action_log
        required: true
        schema:
          $ref: '#/definitions/action_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/action_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update an action log entry
      tags:
      - action-log
  /disciplinary-log:
    get:
      consumes:
      - application/json
      description: List all disciplinary log entries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/disciplinary_log.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all disciplinary log entries
      tags:
      - disciplinary-log
    post:
      consumes:
      - application/json
      description: Create a new disciplinary log entry
      parameters:
      - description: Disciplinary Log Entry
        in: body
        name: disciplinary_log
        required: true
        schema:
          $ref: '#/definitions/disciplinary_log.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/disciplinary_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new disciplinary log entry
      tags:
      - disciplinary-log
  /disciplinary-log/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a disciplinary log entry
      parameters:
      - description: Disciplinary Log Entry ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a disciplinary log entry
      tags:
      - disciplinary-log
    get:
      consumes:
      - application/json
      description: Get a disciplinary log entry
      parameters:
      - description: Disciplinary Log Entry ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/disciplinary_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a disciplinary log entry
      tags:
      - disciplinary-log
    patch:
      consumes:
      - application/json
      description: Patch a disciplinary log entry
      parameters:
      - description: Disciplinary Log Entry ID
        in: path
        name: id
        required: true
        type: string
      - description: Disciplinary Log Entry
        in: body
        name: disciplinary_log
        required: true
        schema:
          $ref: '#/definitions/disciplinary_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/disciplinary_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a disciplinary log entry
      tags:
      - disciplinary-log
    put:
      consumes:
      - application/json
      description: Update a disciplinary log entry
      parameters:
      - description: Disciplinary Log Entry ID
        in: path
        name: id
        required: true
        type: string
      - description: Disciplinary Log Entry
        in: body
        name: disciplinary_log
        required: true
        schema:
          $ref: '#/definitions/disciplinary_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/disciplinary_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a disciplinary log entry
      tags:
      - disciplinary-log
  /documents:
    get:
      consumes:
      - application/json
      description: List all documents
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/document.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all documents
      tags:
      - documents
    post:
      consumes:
      - application/json
      description: Create a new document
      parameters:
      - description: Document
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/document.Request'
      - description: Document file
        in: formData
        name: file
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/document.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new document
      tags:
      - documents
  /documents/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a document
      tags:
      - documents
    get:
      consumes:
      - application/json
      description: Get a document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/document.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a document
      tags:
      - documents
    patch:
      consumes:
      - application/json
      description: Patch a document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      - description: Document
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/document.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/document.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a document
      tags:
      - documents
    put:
      consumes:
      - application/json
      description: Update a document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      - description: Document
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/document.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/document.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a document
      tags:
      - documents
  /documents/{id}/upload:
    post:
      consumes:
      - application/json
      description: Upload a document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      - description: Document file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Upload a document
      tags:
      - documents
  /documents/facility/{Facility}:
    get:
      consumes:
      - application/json
      description: List all documents by facility
      parameters:
      - description: Facility ID
        in: path
        name: Facility
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/document.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all documents by facility
      tags:
      - documents
  /documents/facility/{Facility}/category/{Category}:
    get:
      consumes:
      - application/json
      description: List all documents by facility and category
      parameters:
      - description: Facility ID
        in: path
        name: Facility
        required: true
        type: string
      - description: Category
        in: path
        name: Category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/document.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all documents by facility and category
      tags:
      - documents
  /facility-log:
    get:
      consumes:
      - application/json
      description: List facility log entries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility_log.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List facility log entries
      tags:
      - facility-log
    post:
      consumes:
      - application/json
      description: Create a new facility log entry
      parameters:
      - description: Facility Log Entry
        in: body
        name: facility_log
        required: true
        schema:
          $ref: '#/definitions/facility_log.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/facility_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new facility log entry
      tags:
      - facility-log
  /facility-log/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a facility log entry
      parameters:
      - description: Facility Log Entry ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a facility log entry
      tags:
      - facility-log
    get:
      consumes:
      - application/json
      description: Get a facility log entry
      parameters:
      - description: Facility Log Entry ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility_log.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a facility log entry
      tags:
      - facility-log
    patch:
      consumes:
      - application/json
      description: Patch a facility log entry
      parameters:
      - description: Facility Log Entry ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility Log Entry
        in: body
        name: facility_log
        required: true
        schema:
          $ref: '#/definitions/facility_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a facility log entry
      tags:
      - facility-log
    put:
      consumes:
      - application/json
      description: Update a facility log entry
      parameters:
      - description: Facility Log Entry ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility Log Entry
        in: body
        name: facility_log
        required: true
        schema:
          $ref: '#/definitions/facility_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a facility log entry
      tags:
      - facility-log
  /faq:
    get:
      consumes:
      - application/json
      description: List all FAQs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/faq.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all FAQs
      tags:
      - faq
    post:
      consumes:
      - application/json
      description: Create a new FAQ
      parameters:
      - description: FAQ
        in: body
        name: faq
        required: true
        schema:
          $ref: '#/definitions/faq.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/faq.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new FAQ
      tags:
      - faq
  /faq/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a FAQ
      tags:
      - faq
    get:
      consumes:
      - application/json
      description: Get a FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/faq.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a FAQ
      tags:
      - faq
    patch:
      consumes:
      - application/json
      description: Patch a FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: id
        required: true
        type: string
      - description: FAQ
        in: body
        name: faq
        required: true
        schema:
          $ref: '#/definitions/faq.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/faq.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a FAQ
      tags:
      - faq
    put:
      consumes:
      - application/json
      description: Update a FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: id
        required: true
        type: string
      - description: FAQ
        in: body
        name: faq
        required: true
        schema:
          $ref: '#/definitions/faq.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/faq.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a FAQ
      tags:
      - faq
  /feedback:
    get:
      consumes:
      - application/json
      description: List feedback entries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/feedback.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List feedback entries
      tags:
      - feedback
    post:
      consumes:
      - application/json
      description: Create a new feedback entry
      parameters:
      - description: Feedback Entry
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/feedback.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/feedback.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new feedback entry
      tags:
      - feedback
  /feedback/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a feedback entry
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a feedback entry
      tags:
      - feedback
    get:
      consumes:
      - application/json
      description: Get a feedback entry
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/feedback.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a feedback entry
      tags:
      - feedback
    patch:
      consumes:
      - application/json
      description: Patch a feedback entry
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      - description: Feedback Entry
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/feedback.Request'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a feedback entry
      tags:
      - feedback
    put:
      consumes:
      - application/json
      description: Update a feedback entry
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      - description: Feedback Entry
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/feedback.Request'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a feedback entry
      tags:
      - feedback
  /news:
    get:
      consumes:
      - application/json
      description: List all news entries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/news.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all news entries
      tags:
      - news
    post:
      consumes:
      - application/json
      description: Create a new news entry
      parameters:
      - description: News Entry
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/news.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new news entry
      tags:
      - news
  /news/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a news entry
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a news entry
      tags:
      - news
    get:
      consumes:
      - application/json
      description: Get a news entry
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a news entry
      tags:
      - news
    patch:
      consumes:
      - application/json
      description: Patch a news entry
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: string
      - description: News Entry
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a news entry
      tags:
      - news
    put:
      consumes:
      - application/json
      description: Update a news entry
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: string
      - description: News Entry
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a news entry
      tags:
      - news
  /notification:
    get:
      consumes:
      - application/json
      description: List all notifications
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/notification.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all notifications
      tags:
      - notification
    post:
      consumes:
      - application/json
      description: Create a new notification
      parameters:
      - description: Notification
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/notification.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/notification.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new notification
      tags:
      - notification
  /notification/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a notification
      tags:
      - notification
    get:
      consumes:
      - application/json
      description: Get a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a notification
      tags:
      - notification
    patch:
      consumes:
      - application/json
      description: Patch a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      - description: Notification
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/notification.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a notification
      tags:
      - notification
    put:
      consumes:
      - application/json
      description: Update a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      - description: Notification
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/notification.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a notification
      tags:
      - notification
  /rating-change:
    get:
      consumes:
      - application/json
      description: List rating changes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rating_change.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List rating changes
      tags:
      - rating-change
    post:
      consumes:
      - application/json
      description: Create a new rating change
      parameters:
      - description: Rating Change
        in: body
        name: rating_change
        required: true
        schema:
          $ref: '#/definitions/rating_change.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rating_change.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new rating change
      tags:
      - rating-change
  /rating-change/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a rating change
      parameters:
      - description: Rating Change ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a rating change
      tags:
      - rating-change
    get:
      consumes:
      - application/json
      description: Get a rating change
      parameters:
      - description: Rating Change ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rating_change.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a rating change
      tags:
      - rating-change
    patch:
      consumes:
      - application/json
      description: Patch a rating change
      parameters:
      - description: Rating Change ID
        in: path
        name: id
        required: true
        type: integer
      - description: Rating Change
        in: body
        name: rating_change
        required: true
        schema:
          $ref: '#/definitions/rating_change.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rating_change.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a rating change
      tags:
      - rating-change
    put:
      consumes:
      - application/json
      description: Update a rating change
      parameters:
      - description: Rating Change ID
        in: path
        name: id
        required: true
        type: integer
      - description: Rating Change
        in: body
        name: rating_change
        required: true
        schema:
          $ref: '#/definitions/rating_change.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rating_change.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a rating change
      tags:
      - rating-change
  /roster:
    get:
      consumes:
      - application/json
      description: List rosters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/roster.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List rosters
      tags:
      - roster
    post:
      consumes:
      - application/json
      description: Create a new roster
      parameters:
      - description: Roster
        in: body
        name: roster
        required: true
        schema:
          $ref: '#/definitions/roster.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/roster.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new roster
      tags:
      - roster
  /roster-request:
    get:
      consumes:
      - application/json
      description: List all roster requests
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/roster_request.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all roster requests
      tags:
      - roster-request
    post:
      consumes:
      - application/json
      description: Create a new roster request
      parameters:
      - description: Roster Request
        in: body
        name: roster_request
        required: true
        schema:
          $ref: '#/definitions/roster_request.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/roster_request.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new roster request
      tags:
      - roster-request
  /roster-request/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a roster request
      parameters:
      - description: Roster Request ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a roster request
      tags:
      - roster-request
    get:
      consumes:
      - application/json
      description: Get a roster request
      parameters:
      - description: Roster Request ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/roster_request.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a roster request
      tags:
      - roster-request
    put:
      consumes:
      - application/json
      description: Update a roster request
      parameters:
      - description: Roster Request ID
        in: path
        name: id
        required: true
        type: string
      - description: Roster Request
        in: body
        name: roster_request
        required: true
        schema:
          $ref: '#/definitions/roster_request.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/roster_request.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a roster request
      tags:
      - roster-request
  /roster/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a roster
      parameters:
      - description: Roster ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a roster
      tags:
      - roster
    get:
      consumes:
      - application/json
      description: Get a roster
      parameters:
      - description: Roster ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/roster.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a roster
      tags:
      - roster
    put:
      consumes:
      - application/json
      description: Update a roster
      parameters:
      - description: Roster ID
        in: path
        name: id
        required: true
        type: integer
      - description: Roster
        in: body
        name: roster
        required: true
        schema:
          $ref: '#/definitions/roster.Request'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a roster
      tags:
      - roster
  /user:
    get:
      consumes:
      - application/json
      description: List users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new user
      tags:
      - user
  /user-flag:
    get:
      consumes:
      - application/json
      description: List user flags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user_flag.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List user flags
      tags:
      - user-flag
    post:
      consumes:
      - application/json
      description: Create a new user flag
      parameters:
      - description: User Flag
        in: body
        name: user_flag
        required: true
        schema:
          $ref: '#/definitions/user_flag.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_flag.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new user flag
      tags:
      - user-flag
  /user-flag/{cid}:
    delete:
      consumes:
      - application/json
      description: Delete a user flag
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a user flag
      tags:
      - user-flag
    patch:
      consumes:
      - application/json
      description: Patch a user flag
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: User Flag
        in: body
        name: user_flag
        required: true
        schema:
          $ref: '#/definitions/user_flag.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_flag.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a user flag
      tags:
      - user-flag
  /user-flag/{id}:
    get:
      consumes:
      - application/json
      description: Get a user flag
      parameters:
      - description: User Flag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_flag.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a user flag
      tags:
      - user-flag
  /user-roles:
    delete:
      consumes:
      - application/json
      description: Delete a user role
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a user role
      tags:
      - user-roles
    get:
      consumes:
      - application/json
      description: List user roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user_role.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List user roles
      tags:
      - user-roles
    patch:
      consumes:
      - application/json
      description: Patch a user role
      parameters:
      - description: User Role
        in: body
        name: user_role
        required: true
        schema:
          $ref: '#/definitions/user_role.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_role.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a user role
      tags:
      - user-roles
    post:
      consumes:
      - application/json
      description: Create a new user role
      parameters:
      - description: User Role
        in: body
        name: user_role
        required: true
        schema:
          $ref: '#/definitions/user_role.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_role.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new user role
      tags:
      - user-roles
    put:
      consumes:
      - application/json
      description: Update a user role
      parameters:
      - description: User Role
        in: body
        name: user_role
        required: true
        schema:
          $ref: '#/definitions/user_role.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_role.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a user role
      tags:
      - user-roles
  /user-roles/{id}:
    get:
      consumes:
      - application/json
      description: Get a user role
      parameters:
      - description: User Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_role.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a user role
      tags:
      - user-roles
  /user/{cid}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a user
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Patch a user
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a user
      tags:
      - user
schemes:
- http
swagger: "2.0"
